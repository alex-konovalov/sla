# SLA, chapter 2
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST( "sla01.tst");

# doc/manual.xml:93-98
gap> R:= RootSystem("F",4);;
gap> ExtendedCartanMatrix(R);
rec( ECM := [ [ 2, -1, 0, 0, 0 ], [ -1, 2, -1, 0, 0 ], [ 0, -1, 2, -2, 0 ], 
      [ 0, 0, -1, 2, -1 ], [ 0, 0, 0, -1, 2 ] ], labels := [ 1, 2, 3, 4, 2 ] )

# doc/manual.xml:117-123
gap> C:= [[2,0,-3,0],[0,2,0,-1],[-1,0,2,0],[0,-1,0,2]];
[ [ 2, 0, -3, 0 ], [ 0, 2, 0, -1 ], [ -1, 0, 2, 0 ], [ 0, -1, 0, 2 ] ]
gap> CartanType(C);
rec( enumeration := [ [ 3, 1 ], [ 2, 4 ] ], 
  types := [ [ "G", 2 ], [ "A", 2 ] ] )

# doc/manual.xml:157-166
gap> R:= RootSystem("A",3);;
gap> WeylTransversal( R, [2,6] );
[ [  ], [ 1 ], [ 3 ], [ 1, 2 ], [ 1, 3 ], [ 3, 2 ] ]
gap> R:= RootSystem("E",8);;
gap> p:= PositiveRootsNF(R);;
gap> a:= WeylTransversal( R, [p[1],p[3],p[4],p[5],p[6],p[7],p[8],-p[120]] );;
gap> Length(a);
1920

# doc/manual.xml:185-193
gap> R:= RootSystem( SimpleLieAlgebra("E",6,Rationals) );;
gap> SizeOfWeylGroup(R);                
51840
gap> SizeOfWeylGroup( [["E",6]] );
51840
gap> SizeOfWeylGroup( "E", 6 );   
51840

# doc/manual.xml:229-236
gap> R:= RootSystem("E",6);
<root system of type E6>
gap> G:= WeylGroupAsPermGroup( R );
<permutation group with 6 generators>
gap> Size(G);
51840

# doc/manual.xml:253-260
gap> R:= RootSystem("D",4);;
gap> G:= WeylGroupAsPermGroup(R);
<permutation group with 4 generators>
gap> wt:= ApplyWeylPermToWeight( R, Random(G), [1,1,1,1] );;
gap> ConjugateDominantWeight( WeylGroup(R), wt );
[ 1, 1, 1, 1 ] 

# doc/manual.xml:277-281
gap> R:= RootSystem("D",4);;
gap> WeylWordAsPerm( R, [1,2,1,3,4,2,3,4,1] );
(1,23,12,17)(2,10,14,22)(3,19,16,6)(4,18,15,7)(5,13,11,24)(8,21)(9,20)

# doc/manual.xml:297-308
gap> R:= RootSystem("D",4);;
gap> rts:= [1,3,4,12,13,15,16,24];;
gap> G:= WeylGroupAsPermGroup(R);;
gap> S:= Stabilizer( G, rts, OnSets );
<permutation group of size 64 with 6 generators>
gap> Size(S);
64
gap> List( GeneratorsOfGroup(S), g -> PermAsWeylWord( R, g ) );
[ [ 3 ], [ 3, 4 ], [ 2, 1, 3, 2, 4, 2, 1, 3, 2, 4 ], [ 2, 1, 3, 2 ], 
  [ 2, 1, 4, 2 ], [ 1, 3 ] ]

# doc/manual.xml:342-356
gap> L:= SimpleLieAlgebra("G",2,Rationals);;
gap> V:= HighestWeightModule( L, [2,0] );
<27-dimensional left-module over <Lie algebra of dimension 14 over Rationals>>
gap> B:=AdmissibleLattice(V);;
gap> x:= L.1;
v.1
gap> mx:= MatrixOfAction( B, x );;
gap> IsZero(mx^4); IsZero(mx^5);
false
true
gap> exp:=Sum( List( [0..4], i -> mx^i/Factorial(i) ) );;
gap> ForAll( Flat(exp), IsInt );
true

# doc/manual.xml:370-382
gap> L:= SimpleLieAlgebra("G",2,Rationals);;
gap> V:= HighestWeightModule( L, [1,0] );;
gap> W:= TensorProductOfAlgebraModules( V, V );
<49-dimensional left-module over <Lie algebra of dimension 14 over Rationals>>
gap> DirectSumDecomposition( W );
[ <left-module over <Lie algebra of dimension 14 over Rationals>>, 
  <left-module over <Lie algebra of dimension 14 over Rationals>>, 
  <left-module over <Lie algebra of dimension 14 over Rationals>>, 
  <left-module over <Lie algebra of dimension 14 over Rationals>> ]
gap> List( last, Dimension );
[ 27, 7, 14, 1 ]

# doc/manual.xml:439-444
gap> L:= SimpleLieAlgebra("G",2,Rationals);;
gap> CharacteristicsOfStrata( L, [0,1] );
[ [ v.13+(2)*v.14, (2)*v.13+(3)*v.14, (2)*v.13+(4)*v.14, (6)*v.13+(10)*v.14 ],
  [ 6, 8, 10, 12 ] ]

# doc/manual.xml:453-513
gap> f:= FiniteOrderInnerAutomorphisms("E",6,3)[2];;
gap> M:= Source(f);;
gap> gr:= Grading(f);;
gap> L:= Subalgebra(M,gr[1]);
<Lie algebra over CF(3), with 28 generators>
gap> K:= LieDerivedSubalgebra( L );
<Lie algebra of dimension 27 over CF(3)>
gap> V:= LeftAlgebraModuleByGenerators( K, function(x,v) return x*v; end, gr[2]); 
<left-module over <Lie algebra of dimension 27 over CF(3)>>
gap> DisplayDynkinDiagram( K ); 
A4:  1---4---3---2
A1:  5
gap> dV:= DirectSumDecomposition(V);
[ <left-module over <Lie algebra of dimension 27 over CF(3)>>, 
  <left-module over <Lie algebra of dimension 27 over CF(3)>> ]
gap> DisplayHighestWeight( dV[1] );        
A4:  0---0---0---1
A1:  0
gap> DisplayHighestWeight( dV[2] );
A4:  0---0---1---0
A1:  1
gap> t0:= Basis(LieCentre(L))[1];
v.73+(4/5)*v.75+(3/5)*v.76+(2/5)*v.77+(1/5)*v.78
gap> HighestWeightVector( dV[1] ); t0^last;
v.7
(6/5)*v.7
gap> HighestWeightVector( dV[2] ); t0^last;
v.13
(-3/5)*v.13
gap> hw:= [ [0,1,0,0,0,6/5], [0,0,1,0,1,-3/5] ]; 
[ [ 0, 1, 0, 0, 0, 6/5 ], [ 0, 0, 1, 0, 1, -3/5 ] ]
gap> bas:= Concatenation( CanonicalGenerators( RootSystem(K) )[3],
> Basis(LieCentre(L)) );;
gap> B:= List( bas, x -> [] );;
gap> ad:= List( bas, x -> AdjointMatrix( Basis(M), x ) );;
gap> for i in [1..Length(B)] do for j in [i..Length(B)] do
> B[i][j]:= TraceMat( ad[i]*ad[j]); B[j][i]:= B[i][j];
> od; od;
gap> B;
[ [ 48, 0, 0, -24, 0, 0 ], [ 0, 48, -24, 0, 0, 0 ], [ 0, -24, 48, -24, 0, 0 ], 
  [ -24, 0, -24, 48, 0, 0 ], [ 0, 0, 0, 0, 48, 0 ], [ 0, 0, 0, 0, 0, 144/5 ] ]
gap> CharacteristicsOfStrata( L, B, hw );
[ [ v.74+v.75+v.76, v.73+v.75, (-2)*v.73, (2)*v.74+(2)*v.75+(3)*v.76+(2)*v.77+v.78, 
      (-1)*v.73+(-1)*v.76+(-1)*v.77+(-1)*v.78, v.73+v.74+(2)*v.75+v.76, 
      (2)*v.73+(2)*v.74+(4)*v.75+(4)*v.76+(2)*v.77, (-2)*v.73+v.74, 
      v.74+(4)*v.75+(2)*v.76+v.77, (-1)*v.73+v.74+v.75+v.76, 
      (2)*v.73+(3)*v.74+(5)*v.75+(5)*v.76+(3)*v.77+v.78, v.73+(4)*v.75+v.76, 
      v.75+(-1)*v.76+(-1)*v.77+(-1)*v.78, v.73+v.74+(3)*v.75+(2)*v.76+(-1)*v.78, 
      (4)*v.73+(6)*v.74+(7)*v.75+(9)*v.76+(6)*v.77+(3)*v.78, 
      (-3)*v.73+(-2)*v.75+(-2)*v.76+(-2)*v.77+(-1)*v.78, (4)*v.75+(2)*v.76, 
      (2)*v.73+(6)*v.74+(8)*v.75+(8)*v.76+(4)*v.77+(2)*v.78, 
      (2)*v.74+(4)*v.75+(2)*v.76+v.77, (2)*v.74+(4)*v.75+(2)*v.76+(-2)*v.77+(-2)*v.78,
      v.73+v.74+(5)*v.75+(3)*v.76+v.77, v.73+(2)*v.74+(4)*v.75+(3)*v.76+v.77, 
      (4)*v.73+(6)*v.74+(10)*v.75+(10)*v.76+(4)*v.77, 
      (3)*v.73+(6)*v.74+(10)*v.75+(10)*v.76+(5)*v.77, 
      (-1)*v.73+v.74+(3)*v.75+(-3)*v.77+(-2)*v.78, 
      (6)*v.74+(10)*v.75+(8)*v.76+(2)*v.77 ], 
  [ 8, 5, 16, 11, 12, 10, 13, 18, 18, 15, 15, 17, 13, 15, 16, 20, 20, 20, 19, 21, 19, 
      17, 20, 22, 22, 24 ] ]

#
gap> STOP_TEST("sla01.tst", 1 );
